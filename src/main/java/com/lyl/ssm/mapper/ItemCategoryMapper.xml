<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyl.ssm.mapper.ItemCategoryMapper">
    <!--    实体类与数据库映射部分-->
    <resultMap id="resultItemCategory" type="com.lyl.ssm.po.ItemCategory">
        <result property="id" column="id"></result>
        <result property="name" column="name"></result>
        <result property="pid" column="pid"></result>
        <result property="isDelete" column="isDelete"></result>
    </resultMap>

    <!--    声明数据库字段-->
    <sql id="ItemCategory_field">
        id,name,pid,isDelete
    </sql>
    <!--    实体类属性-->
    <sql id="ItemCategory_insert">
        #{id},#{name},#{pid},#{isDelete}
    </sql>
    <sql id="ItemCategory_where">
        <if test="id!=null">
            and id=#{id}
        </if>
        <if test="name!=null">
            and name=#{name}
        </if>
        <if test="pid!=null">
            and pid=#{pid}
        </if>
        <if test="isDelete!=null">
            and isDelete=#{isDelete}
        </if>
    </sql>
<!--    更新时条件-->
    <sql id="ItemCategory_update">
        <if test="name!=null">
            name=#{name},
        </if>
        <if test="pid!=null">
            pid=#{pid},
        </if>
        <if test="isDelete!=null">
            isDelete=#{isDelete}
        </if>
    </sql>

    <!--    新增，参数：实体类，返回值：主键-->
    <insert id="insert" parameterType="com.lyl.ssm.po.ItemCategory" useGeneratedKeys="true" keyProperty="id">
        insert into item_category(
        <include refid="ItemCategory_field"/>
        )values (
        <include refid="ItemCategory_insert"/>
        )
    </insert>
    <!--    根据实体主键删除一个实体-->
    <delete id="deleteById" parameterType="java.lang.Integer">
            delete from item_category where id=#{id}
        </delete>
    <!--    根据传过来的实体类删除-->

    <delete id="deleteByEntity" parameterType="com.lyl.ssm.po.ItemCategory">
        delete from item_category where 1=1
        <include refid="ItemCategory_where"/>
    </delete>

    <!--    通过map删除-->
    <delete id="deleteByMap" parameterType="java.util.HashMap">
        delete from item_category where 1=1
        <include refid="ItemCategory_where"/>
    </delete>


    <!--    更新一个实体-->
    <update id="update" parameterType="com.lyl.ssm.po.ItemCategory">
        update item_category
        <set>
            <include refid="ItemCategory_update"/>
        </set>
        where 1=1
        <include refid="ItemCategory_where"/>
    </update>

    <!--    通过id进行修改-->
    <update id="updateById" parameterType="com.lyl.ssm.po.ItemCategory">
        update item_category
        <set>
            <include refid="ItemCategory_update"/>
        </set>
        where id=#{id}
    </update>
    <!--    根据参数进行查询-->

    <select id="listByMap" parameterType="map" resultMap="resultItemCategory">
        select
        <include refid="ItemCategory_field"/>
        from item_category
        where 1=1
        <include refid="ItemCategory_where"/>
    </select>

    <!--    查询整个类-->
    <select id="listAll" resultMap="resultItemCategory">
        select
        <include refid="ItemCategory_field"/>
        from item_category
    </select>
    <!--    查询所有实体,根据实体属性值为判断条件查询所有实体-->

    <select id="listAllByEntity" parameterType="com.lyl.ssm.po.ItemCategory" resultMap="resultItemCategory">
        select
        <include refid="ItemCategory_field"/>
        from item_category
        where 1=1
        <include refid="ItemCategory_where"/>
    </select>
<!--    根据主键获取实体信息-->
    <select id="load" resultMap="resultItemCategory" parameterType="java.lang.Integer">
        select
        <include refid="ItemCategory_field"/>
        from item_category
        where id=#{id}
    </select>




    <!--    根据主键获取一个实体-->

    <select id="getById" resultMap="resultItemCategory" parameterType="java.lang.Integer">
        select
        <include refid="ItemCategory_field"/>
        from item_category
        where id=#{id}
    </select>

<!--    通过map查询-->
    <select id="getByMap" parameterType="map" resultMap="resultItemCategory">
        select
        <include refid="ItemCategory_field"/>
        from item_category
        where 1=1
        <include refid="ItemCategory_where"/>
    </select>
    <!--    通过对象查询分页-不分页-->
    <select id="getByEntity" parameterType="com.lyl.ssm.po.ItemCategory" resultMap="resultItemCategory">
        select
        <include refid="ItemCategory_field"/>
        from item_category
        where 1=1
        <include refid="ItemCategory_where"/>
    </select>

<!--    通过map查询分页-->
    <select id="findByMap" parameterType="map" resultMap="resultItemCategory">
        select
        <include refid="ItemCategory_field"/>
        from item_category
        where 1=1
        <include refid="ItemCategory_where"/>
    </select>

<!--    通过对象查询分页-->
    <select id="findByEntity" parameterType="com.lyl.ssm.po.ItemCategory" resultMap="resultItemCategory">
        select
        <include refid="ItemCategory_field"/>
        from item_category
        where 1=1
        <include refid="ItemCategory_where"/>
    </select>

    <!--    批量新增-->
    <insert id="insertBatch" parameterType="java.util.List">
        insert into item_category(
        <include refid="ItemCategory_field"/>
        )values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.name},#{item.pid},#{item.isDelete})
        </foreach>
    </insert>
    <!--    批量修改-->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            update item_category
            <set>
                <if test="item.name!=null">
                    name=#{item.name}
                </if>
                <if test="item.passWord!=null">
                    pid=#{item.pid}
                </if>
                <if test="item.realName!=null">
                    isDelete=#{item.isDelete}
                </if>
            </set>
            where 1=1
            <if test="item.id!=null">
                and id=#{item.id}
            </if>
        </foreach>
    </update>

    <!--    封装纯sql语法-->
    <!--        查询一个对象，返回map-->

    <select id="getBySqlReturnMap" resultType="map">
            ${sql}
        </select>
    <!--    查询一个对象返回实体类-->
    <select id="getBySqlReturnEntity" resultMap="resultItemCategory">
            ${sql}
        </select>
<!--    查询一个对象返回map-->

        <select id="listBySqlReturnMap" resultType="map">
            ${sql}
        </select>

<!--    查询列表返回实体-->
    <select id="listBySqlReturnEntity" resultMap="resultItemCategory">
            ${sql}
        </select>
<!--    查询分页-->
    <select id="findBySqlRerturnEntity" resultMap="resultItemCategory">
            ${sql}
        </select>
<!--    通过sql修改-->
    <update id="updateBysql">
        ${sql}
    </update>

<!--    通过sql删除-->

    <delete id="deleteBySql">
        ${sql}
    </delete>


</mapper>